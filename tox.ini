[tox]
envlist =
    py38
    flake8
    docs
    lint

[travis]
python =
    3.8: py38

[testenv]
commands =
;    pip install -U pip
;    pytest --basetemp={envtmpdir}
;    bash -c 'find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf'
    python -m pip check
    python -m pytest {posargs}
;    codecov
     coverage
setenv =
    PYTHONPATH = {toxinidir}
    PIP_LOG={envdir}/pip.log
    PIP_DISABLE_PIP_VERSION_CHECK=1
    # Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
    PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
    CODECOV_TOKEN=edcb046a-1e26-4407-bf70-6150cf15fa38
    CODACY_PROJECT_TOKEN=c2999183e7844bb78ac468a4388306d0
passenv =
    CI
    COVERAGE*
    CODECOV_*
    TRAVIS*
    TWINE_*
deps =
    -r{toxinidir}/requirements_dev.txt
;    codecov
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
;     -r{toxinidir}/requirements.txt

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 person tests

[testenv:pkg]
deps =
    collective.checkdocs>=0.2
    pep517>=0.7.0
    pip>=19.2.3
    setuptools>=41.4
    twine>=2.0.0
    wheel>=0.33.6
commands =
    rm -rf {toxinidir}/dist
    python setup.py check -m -s
    # disabled due to errors with older setuptools:
    # python setup.py sdist bdist_wheel
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    python -m twine check {toxinidir}/dist/*
